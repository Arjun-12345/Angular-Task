{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecommendationPipe {\n  transform(value, stockpurchaseprice, stockcurrentprice) {\n    //buyMore when loss>20%\n    //Hold when profit or loss is between 0 and 15%\n    //Sell when profit is more than 20% or loss is more than 40%\n    if (stockcurrentprice > stockpurchaseprice) {\n      if (stockcurrentprice - stockpurchaseprice > stockpurchaseprice * 20 / 100) {\n        return 'Sell'; //profit more than 20%\n      } else if (stockcurrentprice - stockpurchaseprice < stockpurchaseprice * 15 / 100) {\n        return 'Hold'; //profit less than 15%\n      } else {\n        return 'BuyMore'; //profit between 15-20 %\n      }\n    } else if (stockpurchaseprice == stockcurrentprice) {\n      return 'Hold'; //no profit/no loss\n    } else {\n      if (stockpurchaseprice - stockcurrentprice > stockpurchaseprice * 40 / 100) {\n        return 'Sell'; //loss more than 40%\n      } else if (stockpurchaseprice - stockcurrentprice > stockpurchaseprice * 20 / 100) {\n        return 'BuyMore'; //loss more than 20% but less than 40%\n      } else return 'Hold';\n    }\n  }\n}\nRecommendationPipe.ɵfac = function RecommendationPipe_Factory(t) {\n  return new (t || RecommendationPipe)();\n};\nRecommendationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"recommendation\",\n  type: RecommendationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAG7BC,SAAS,CAACC,KAAU,EAAEC,kBAAyB,EAACC,iBAAwB;IACpE;IACA;IACA;IACA,IAAGA,iBAAiB,GAACD,kBAAkB,EACvC;MACE,IAAIC,iBAAiB,GAACD,kBAAkB,GAAIA,kBAAkB,GAAG,EAAE,GAAG,GAAI,EAC1E;QACE,OAAO,MAAM,CAAC;OACf,MACI,IAAIC,iBAAiB,GAACD,kBAAkB,GAAGA,kBAAkB,GAAG,EAAE,GAAG,GAAI,EAC9E;QACE,OAAO,MAAM,CAAC;OACf,MACG;QACF,OAAO,SAAS,CAAC;;KAEpB,MACI,IAAIA,kBAAkB,IAAEC,iBAAiB,EAAC;MAC7C,OAAO,MAAM,CAAC;KACf,MACG;MACF,IAAKD,kBAAkB,GAACC,iBAAiB,GAAGD,kBAAkB,GAAG,EAAE,GAAG,GAAI,EAAE;QAC1E,OAAO,MAAM,CAAC;OACf,MACI,IAAIA,kBAAkB,GAACC,iBAAiB,GAAGD,kBAAkB,GAAG,EAAE,GAAG,GAAI,EAC9E;QACE,OAAO,SAAS,CAAC;OAClB,MAEC,OAAO,MAAM;;EAErB;;AAnCWH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;;QAAlBA,kBAAkB;EAAAK;AAAA","names":["RecommendationPipe","transform","value","stockpurchaseprice","stockcurrentprice","pure"],"sourceRoot":"","sources":["F:\\Angular\\day5\\stockManagement\\src\\app\\pipes\\recommendation.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recommendation'\n})\nexport class RecommendationPipe implements PipeTransform {\n \n  \n  transform(value: any, stockpurchaseprice:number,stockcurrentprice:number ) {\n      //buyMore when loss>20%\n      //Hold when profit or loss is between 0 and 15%\n      //Sell when profit is more than 20% or loss is more than 40%\n      if(stockcurrentprice>stockpurchaseprice)\n      {\n        if((stockcurrentprice-stockpurchaseprice)> (stockpurchaseprice * 20 / 100))\n        {\n          return 'Sell';//profit more than 20%\n        }\n        else if((stockcurrentprice-stockpurchaseprice)<(stockpurchaseprice * 15 / 100))\n        {\n          return 'Hold';//profit less than 15%\n        } \n        else{\n          return 'BuyMore';//profit between 15-20 %\n        }\n      }\n      else if (stockpurchaseprice==stockcurrentprice){\n        return 'Hold';//no profit/no loss\n      }\n      else{\n        if( (stockpurchaseprice-stockcurrentprice)>(stockpurchaseprice * 40 / 100) ){\n          return 'Sell';//loss more than 40%\n        }\n        else if((stockpurchaseprice-stockcurrentprice)>(stockpurchaseprice * 20 / 100))\n        {\n          return 'BuyMore';//loss more than 20% but less than 40%\n        }\n        else\n          return 'Hold';\n      }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}