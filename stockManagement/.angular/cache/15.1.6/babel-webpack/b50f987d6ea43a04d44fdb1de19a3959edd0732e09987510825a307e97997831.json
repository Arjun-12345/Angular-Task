{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecommendationPipe {\n  transform(value, stockpurchaseprice, stockcurrentprice) {\n    let investmentval = value * stockpurchaseprice;\n    let currentval = value * stockpurchaseprice;\n    let profitpercent = 0;\n    let losspercent = 0;\n    //buyMore when loss>20%\n    //Hold when profit or loss is between 0 and 15%\n    //Sell when profit is more than 20% or loss is more than 40%\n    if (investmentval < currentval) {\n      profitpercent = (currentval - investmentval) / investmentval * 100;\n      if (profitpercent >= 0 && profitpercent <= 15) {\n        return \"Hold\";\n      } else if (profitpercent > 20) {\n        return \"Sell\";\n      } else return \"BuyMore\";\n    } else {\n      losspercent = (investmentval - currentval) / investmentval * 100;\n      if (losspercent >= 0 && losspercent <= 15) {\n        return \"Hold\";\n      } else if (losspercent >= 20 && losspercent <= 40) {\n        return \"BuyMore\";\n      } else if (losspercent > 40) {\n        return \"Sell\";\n      }\n    }\n    // }\n    // else\n    //   losspercent = ((investmentval-currentval)/investmentval)*100;\n    //   console.log(\"Loss Percent is\",losspercent)\n    //   return \"Save\"\n  }\n}\n\nRecommendationPipe.ɵfac = function RecommendationPipe_Factory(t) {\n  return new (t || RecommendationPipe)();\n};\nRecommendationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"recommendation\",\n  type: RecommendationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAG7BC,SAAS,CAACC,KAAa,EAAEC,kBAAyB,EAACC,iBAAwB;IACvE,IAAIC,aAAa,GAAIH,KAAK,GAACC,kBAAmB;IAC9C,IAAIG,UAAU,GAAIJ,KAAK,GAACC,kBAAmB;IAC3C,IAAII,aAAa,GAAG,CAAC;IACrB,IAAIC,WAAW,GAAC,CAAC;IACjB;IACA;IACA;IACA,IAAIH,aAAa,GAAEC,UAAU,EAAC;MAC5BC,aAAa,GAAI,CAACD,UAAU,GAACD,aAAa,IAAEA,aAAa,GAAE,GAAG;MAE9D,IAAGE,aAAa,IAAE,CAAC,IAAIA,aAAa,IAAE,EAAE,EAAC;QACvC,OAAO,MAAM;OACd,MACI,IAAGA,aAAa,GAAC,EAAE,EAAC;QACvB,OAAO,MAAM;OACd,MAEC,OAAO,SAAS;KACnB,MACG;MACAC,WAAW,GAAI,CAACH,aAAa,GAACC,UAAU,IAAED,aAAa,GAAE,GAAG;MAC5D,IAAGG,WAAW,IAAE,CAAC,IAAIA,WAAW,IAAE,EAAE,EAAC;QACnC,OAAO,MAAM;OACd,MACI,IAAGA,WAAW,IAAE,EAAE,IAAIA,WAAW,IAAE,EAAE,EAAC;QACzC,OAAO,SAAS;OACjB,MACI,IAAGA,WAAW,GAAC,EAAE,EAAC;QACrB,OAAO,MAAM;;;IAInB;IACA;IACA;IACA;IAEA;EACJ;;;AA1CWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;;QAAlBA,kBAAkB;EAAAS;AAAA","names":["RecommendationPipe","transform","value","stockpurchaseprice","stockcurrentprice","investmentval","currentval","profitpercent","losspercent","pure"],"sourceRoot":"","sources":["F:\\Angular\\day5\\stockManagement\\src\\app\\pipes\\recommendation.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recommendation'\n})\nexport class RecommendationPipe implements PipeTransform {\n \n  \n  transform(value: number, stockpurchaseprice:number,stockcurrentprice:number ) {\n      let investmentval = (value*stockpurchaseprice);      \n      let currentval = (value*stockpurchaseprice);\n      let profitpercent = 0;\n      let losspercent=0; \n      //buyMore when loss>20%\n      //Hold when profit or loss is between 0 and 15%\n      //Sell when profit is more than 20% or loss is more than 40%\n      if( investmentval< currentval){\n        profitpercent = ((currentval-investmentval)/investmentval)*100;\n\n        if(profitpercent>=0 && profitpercent<=15){\n          return \"Hold\";\n        }\n        else if(profitpercent>20){\n          return \"Sell\";\n        }\n        else\n          return \"BuyMore\";\n      }\n      else{\n          losspercent = ((investmentval-currentval)/investmentval)*100;\n          if(losspercent>=0 && losspercent<=15){\n            return \"Hold\";\n          }\n          else if(losspercent>=20 && losspercent<=40){\n            return \"BuyMore\";\n          }\n          else if(losspercent>40){\n            return \"Sell\";\n          }\n      }    \n            \n      // }\n      // else\n      //   losspercent = ((investmentval-currentval)/investmentval)*100;\n      //   console.log(\"Loss Percent is\",losspercent)\n      \n      //   return \"Save\"\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}