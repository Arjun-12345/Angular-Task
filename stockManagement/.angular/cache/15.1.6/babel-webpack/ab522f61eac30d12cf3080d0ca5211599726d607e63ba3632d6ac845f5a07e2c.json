{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecommendationPipe {\n  transform(value, stockpurchaseprice, stockcurrentprice) {\n    var investmentval = value * stockpurchaseprice;\n    var currentval = value * stockpurchaseprice;\n    var profitpercent = 0;\n    var losspercent = 0;\n    //buyMore when loss>20%\n    //Hold when profit or loss is between 0 and 15%\n    //Sell when profit is more than 20% or loss is more than 40%\n    if (investmentval < currentval) {\n      profitpercent = (currentval - investmentval) / investmentval * 100;\n      console.log(\"Profit Percent is \", profitpercent);\n    } else losspercent = (investmentval - currentval) / investmentval * 100;\n    console.log(\"Loss Percent is\", losspercent);\n    return \"Save\";\n  }\n}\nRecommendationPipe.ɵfac = function RecommendationPipe_Factory(t) {\n  return new (t || RecommendationPipe)();\n};\nRecommendationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"recommendation\",\n  type: RecommendationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAE7BC,SAAS,CAACC,KAAa,EAAEC,kBAAyB,EAACC,iBAAwB;IACvE,IAAIC,aAAa,GAAIH,KAAK,GAACC,kBAAmB;IAC9C,IAAIG,UAAU,GAAIJ,KAAK,GAACC,kBAAmB;IAC3C,IAAII,aAAa,GAAC,CAAC;IACnB,IAAIC,WAAW,GAAC,CAAC;IACjB;IACA;IACA;IACA,IAAIH,aAAa,GAAEC,UAAU,EAAC;MAC5BC,aAAa,GAAI,CAACD,UAAU,GAACD,aAAa,IAAEA,aAAa,GAAE,GAAG;MAC9DI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACH,aAAa,CAAC;KAChD,MAECC,WAAW,GAAI,CAACH,aAAa,GAACC,UAAU,IAAED,aAAa,GAAE,GAAG;IAC5DI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACF,WAAW,CAAC;IAE1C,OAAO,MAAM;EACnB;;AAnBWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;;QAAlBA,kBAAkB;EAAAW;AAAA","names":["RecommendationPipe","transform","value","stockpurchaseprice","stockcurrentprice","investmentval","currentval","profitpercent","losspercent","console","log","pure"],"sourceRoot":"","sources":["F:\\Angular\\day5\\stockManagement\\src\\app\\pipes\\recommendation.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recommendation'\n})\nexport class RecommendationPipe implements PipeTransform {\n\n  transform(value: number, stockpurchaseprice:number,stockcurrentprice:number ) {\n      var investmentval = (value*stockpurchaseprice);\n      var currentval = (value*stockpurchaseprice);\n      var profitpercent=0; \n      var losspercent=0;\n      //buyMore when loss>20%\n      //Hold when profit or loss is between 0 and 15%\n      //Sell when profit is more than 20% or loss is more than 40%\n      if( investmentval< currentval){\n        profitpercent = ((currentval-investmentval)/investmentval)*100;\n        console.log(\"Profit Percent is \",profitpercent);        \n      }\n      else\n        losspercent = ((investmentval-currentval)/investmentval)*100;\n        console.log(\"Loss Percent is\",losspercent)\n      \n        return \"Save\"\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}